document.addEventListener("DOMContentLoaded",function(){function e(e,t,n){const o={QB:2,RB:3,WR:3,TE:1},a=f[e],s={};a.forEach(e=>{s[e.pos]=(s[e.pos]||0)+1}),t.forEach(e=>{s[e.pos]--}),n.forEach(e=>{s[e.pos]=(s[e.pos]||0)+1});for(const[e,t]of Object.entries(o))if((s[e]||0)<t)return!1;return!0}function t(e,t){const n={QB:2,RB:3,WR:3,TE:1};return e.filter(e=>e.pos===t).sort((e,t)=>parseFloat(t.avg_points)-parseFloat(e.avg_points)).slice(0,n[t])}function n(e,n){let o=0;const a=f[e];return n.forEach(e=>{t(a,e.pos).some(t=>t.player_name===e.player_name)&&o++}),o>=Math.ceil(n.length/2)}function o(t,o,r,l,c){const i=[],p=f[t],m=parseInt(h.value);(o?[o]:Object.keys(f).filter(e=>e!==t)).forEach(o=>{const r=f[o];for(let l=1;l<=m;l++){const m=a(p,l,c),u=a(r,l,new Set);m.forEach(a=>{n(t,a)&&u.forEach(r=>{if(!n(o,r))return;if(!e(t,a,r)||!e(o,r,a))return;const l=a.reduce((e,t)=>e+parseFloat(t.avg_points),0),c=r.reduce((e,t)=>e+parseFloat(t.avg_points),0),p=s(t,a,r),m=s(o,r,a);l-c<=5&&p.totalImprovement>0&&m.totalImprovement>0&&i.push({partnerTeam:o,giving:a,receiving:r,myValue:l,theirValue:c,myImpact:p,theirImpact:m,netValue:(p.totalImprovement+m.totalImprovement)/2})})})}});const u=i.sort((e,t)=>t.myImpact.totalImprovement-e.myImpact.totalImprovement),d={};return u.filter(e=>(d[e.partnerTeam]=(d[e.partnerTeam]||0)+1,d[e.partnerTeam]<=2)).slice(0,5)}function a(e,t,n){function o(e,n){if(n.length!==t)for(let t=e;t<a.length;t++)n.push(a[t]),o(t+1,n),n.pop();else s.push([...n])}const a=e.filter(e=>!n.has(e.player_name)&&"INJURY_RESERVE"!==e.injury_stat);console.log(a);const s=[];return o(0,[]),s}function s(e,t,n){const o=f[e],a={QB:[],RB:[],WR:[],TE:[]};o.forEach(e=>{a[e.pos]&&a[e.pos].push({name:e.player_name,ppg:parseFloat(e.avg_points)})});const s=r(a);t.forEach(e=>{a[e.pos]&&(a[e.pos]=a[e.pos].filter(t=>t.name!==e.player_name))}),n.forEach(e=>{a[e.pos]&&a[e.pos].push({name:e.player_name,ppg:parseFloat(e.avg_points)})});const l=r(a),c={};let i=0;return Object.keys(a).forEach(e=>{c[e]=l[e]-s[e],i+=c[e]}),{improvements:c,totalImprovement:i,currentStrength:s,newStrength:l}}function r(e){const t={QB:2,RB:3,WR:3,TE:1},n={};return Object.entries(e).forEach(([e,o])=>{const a=o.sort((e,t)=>t.ppg-e.ppg),s=t[e],r=a.slice(0,s);n[e]=r.reduce((e,t)=>e+t.ppg,0)/Math.max(1,r.length)}),n}function l(e){function t(e){return Object.entries(e.improvements).map(([e,t])=>{return`<li>${e}: <span class="${t>0?"text-success":t<0?"text-danger":"text-muted"}">${t>0?"+":""}${t.toFixed(2)} PPG</span></li>`}).join("")}g.style.display="block",g.innerHTML="",0!==e.length?e.forEach(e=>{const n=document.createElement("div");n.className="card mb-3",n.innerHTML=`\n                <div class="card-header">\n                    <h5>Trade with ${e.partnerTeam}</h5>\n                </div>\n                <div class="card-body">\n                    <div class="row">\n                        <div class="col-md-6">\n                            <h6>You Give:</h6>\n                            <ul class="list-unstyled">\n                                ${e.giving.map(e=>`<li>${e.player_name} (${e.pos}) - ${e.avg_points} PPG</li>`).join("")}\n                            </ul>\n                            <h6>${E[c.value]} Position Group Changes:</h6>\n                            <ul class="list-unstyled">\n                                ${t(e.myImpact)}\n                            </ul>\n                            <p><strong>Total Impact: ${e.myImpact.totalImprovement.toFixed(2)} PPG</strong></p>\n                        </div>\n                        <div class="col-md-6">\n                            <h6>You Receive:</h6>\n                            <ul class="list-unstyled">\n                                ${e.receiving.map(e=>`<li>${e.player_name} (${e.pos}) - ${e.avg_points} PPG</li>`).join("")}\n                            </ul>\n                            <h6>${E[e.partnerTeam]} Position Group Changes:</h6>\n                            <ul class="list-unstyled">\n                                ${t(e.theirImpact)}\n                            </ul>\n                            <p><strong>Total Impact: ${e.theirImpact.totalImprovement.toFixed(2)} PPG</strong></p>\n                        </div>\n                    </div>\n                    <div class="text-center mt-2">\n                        <p class="mb-0">\n                            <strong>Net Value: ${e.netValue>0?"+":""}${e.netValue.toFixed(2)} PPG</strong>\n                        </p>\n                    </div>\n                </div>\n            `,g.appendChild(n)}):g.innerHTML='<div class="alert alert-info">No valid trade suggestions found.</div>'}const c=document.getElementById("team-select"),i=document.getElementById("position-select"),p=document.getElementById("partner-select"),m=document.getElementById("locked-players"),u=document.getElementById("target-player"),d=document.getElementById("target-player-select"),h=document.getElementById("max-players"),v=document.getElementById("suggest-btn"),g=document.getElementById("suggestions-results");let f={},y={},E={};Promise.all([fetch("../../assets/json/standings.json"),fetch("../../assets/json/player_comparison/players_2024.json")]).then(([e,t])=>Promise.all([e.json(),t.json()])).then(([e,t])=>{y=t,e.forEach(e=>{[c,p].forEach(t=>{const n=document.createElement("option");n.value=e.team,n.textContent=e.team,t.appendChild(n)}),E[e.team]=e.abbrev});const n=e.map(e=>fetch(`../../assets/json/team_rosters/${e.abbrev}_2024.json`).then(e=>e.json()).then(t=>{f[e.team]=t}));return Promise.all(n)})["catch"](e=>console.error("Error loading data:",e)),c.addEventListener("change",function(){m.innerHTML="",(f[this.value]||[]).filter(e=>"INJURY_RESERVE"!==e.injury_stat).forEach(e=>{const t=document.createElement("option");t.value=e.player_name,t.textContent=`${e.player_name} (${e.pos}) - ${e.avg_points} PPG`,m.appendChild(t)})}),u.addEventListener("input",function(){const e=this.value.toLowerCase();e.length<2?d.style.display="none":(d.innerHTML="",d.style.display="block",Object.values(y).filter(t=>t.name.toLowerCase().includes(e)).slice(0,10).forEach(e=>{const t=document.createElement("option");t.value=e.name,t.textContent=`${e.name} (${e.position}) - ${e.avg_points} PPG`,d.appendChild(t)}))}),v.addEventListener("click",function(){const e=c.value,t=p.value,n=u.value,a=i.value,s=new Set(Array.from(m.selectedOptions).map(e=>e.value));e?l(o(e,t,n,a,s)):alert("Please select your team")})});