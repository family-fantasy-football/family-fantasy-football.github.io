function initializeTradeAnalyzer(e){populateTeamSelects([...new Set(e.map(e=>e.team))]),document.getElementById("team1-select").addEventListener("change",function(){populatePlayerSelect("team1-players",this.value,e)}),document.getElementById("team2-select").addEventListener("change",function(){populatePlayerSelect("team2-players",this.value,e)}),document.getElementById("analyze-btn").addEventListener("click",function(){analyzeTrade(e)})}function populateTeamSelects(e){const t=["team1-select","team2-select"];e.sort(),t.forEach(t=>{const n=document.getElementById(t);n.innerHTML='<option value="">Select Team</option>',e.forEach(e=>{n.innerHTML+=`<option value="${e}">${e}</option>`})})}function populatePlayerSelect(e,t,n){const a=document.getElementById(e);a.innerHTML="";const o=n.filter(e=>e.team===t);["QB","RB","WR","TE","K","D/ST"].forEach(e=>{const t=o.filter(t=>t.position===e).sort((e,t)=>t.ros_projection-e.ros_projection);if(t.length>0){const n=document.createElement("optgroup");n.label=e,t.forEach(e=>{const t=document.createElement("option");t.value=e.id,t.text=`${e.name} (${e.avg_points} pts/g)`,n.appendChild(t)}),a.appendChild(n)}})}function analyzeTrade(e){const t=getSelectedPlayers("team1-players",e),n=getSelectedPlayers("team2-players",e);0!==t.length&&0!==n.length?(displayAnalysis({team1:analyzeTradeImpact(t,n),team2:analyzeTradeImpact(n,t)}),createTradeChart(t,n),document.getElementById("analysis-results").style.display="block"):alert("Please select players from both teams")}function analyzeTradeImpact(e,t){const n=e.reduce((e,t)=>e+t.ros_projection,0),a=t.reduce((e,t)=>e+t.ros_projection,0);return{pointsGiving:n,pointsReceiving:a,netChange:a-n,positionImpact:analyzePositionImpact(e,t)}}function analyzePositionImpact(e,t){const n={};return["QB","RB","WR","TE","K","D/ST"].forEach(a=>{const o=e.filter(e=>e.position===a),i=t.filter(e=>e.position===a);(o.length>0||i.length>0)&&(n[a]={giving:o.reduce((e,t)=>e+t.ros_projection,0),receiving:i.reduce((e,t)=>e+t.ros_projection,0)})}),n}function displayAnalysis(e){["team1","team2"].forEach(t=>{const n=document.getElementById(`${t}-analysis`),a=e[t];let o=`\n            <div class="card-body">\n                <h5>Projected ROS Impact</h5>\n                <p>Giving up: ${a.pointsGiving.toFixed(1)} points</p>\n                <p>Receiving: ${a.pointsReceiving.toFixed(1)} points</p>\n                <p class="font-weight-bold ${a.netChange>0?"text-success":"text-danger"}">\n                    Net change: ${a.netChange.toFixed(1)} points\n                </p>\n                <h6>Position Impact:</h6>\n                <ul>\n        `;Object.entries(a.positionImpact).forEach(([e,t])=>{const n=t.receiving-t.giving;o+=`\n                <li>${e}: ${n>0?"+":""}${n.toFixed(1)} points</li>\n            `}),o+="</ul></div>",n.innerHTML=o})}function createTradeChart(e,t){const n={title:{text:"Trade Comparison",left:"center"},tooltip:{trigger:"axis",axisPointer:{type:"shadow"}},legend:{data:["Points Giving","Points Receiving"],top:25},xAxis:{type:"category",data:[document.getElementById("team1-select").value,document.getElementById("team2-select").value]},yAxis:{type:"value",name:"Projected ROS Points"},series:[{name:"Points Giving",type:"bar",data:[e.reduce((e,t)=>e+t.ros_projection,0),t.reduce((e,t)=>e+t.ros_projection,0)]},{name:"Points Receiving",type:"bar",data:[t.reduce((e,t)=>e+t.ros_projection,0),e.reduce((e,t)=>e+t.ros_projection,0)]}]};echarts.init(document.getElementById("trade-chart")).setOption(n)}function getSelectedPlayers(e,t){const n=document.getElementById(e),a=Array.from(n.selectedOptions).map(e=>e.value);return t.filter(e=>a.includes(e.id.toString()))}document.addEventListener("DOMContentLoaded",function(){fetch("/assets/json/trade_analyzer/players_2025.json").then(e=>e.json()).then(e=>initializeTradeAnalyzer(e))});